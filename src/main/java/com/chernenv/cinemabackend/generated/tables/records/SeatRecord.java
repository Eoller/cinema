/*
 * This file is generated by jOOQ.
 */
package com.chernenv.cinemabackend.generated.tables.records;


import com.chernenv.cinemabackend.generated.tables.Seat;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SeatRecord extends UpdatableRecordImpl<SeatRecord> implements Record4<Long, Boolean, Integer, Long> {

    private static final long serialVersionUID = -718171385;

    /**
     * Setter for <code>cinemaDBtest.seat.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>cinemaDBtest.seat.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cinemaDBtest.seat.is_vip</code>.
     */
    public void setIsVip(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>cinemaDBtest.seat.is_vip</code>.
     */
    public Boolean getIsVip() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>cinemaDBtest.seat.number</code>.
     */
    public void setNumber(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>cinemaDBtest.seat.number</code>.
     */
    public Integer getNumber() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>cinemaDBtest.seat.cinema_hall_id</code>.
     */
    public void setCinemaHallId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>cinemaDBtest.seat.cinema_hall_id</code>.
     */
    public Long getCinemaHallId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Boolean, Integer, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Boolean, Integer, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Seat.SEAT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field2() {
        return Seat.SEAT.IS_VIP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Seat.SEAT.NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Seat.SEAT.CINEMA_HALL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component2() {
        return getIsVip();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getCinemaHallId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value2() {
        return getIsVip();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getCinemaHallId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SeatRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SeatRecord value2(Boolean value) {
        setIsVip(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SeatRecord value3(Integer value) {
        setNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SeatRecord value4(Long value) {
        setCinemaHallId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SeatRecord values(Long value1, Boolean value2, Integer value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SeatRecord
     */
    public SeatRecord() {
        super(Seat.SEAT);
    }

    /**
     * Create a detached, initialised SeatRecord
     */
    public SeatRecord(Long id, Boolean isVip, Integer number, Long cinemaHallId) {
        super(Seat.SEAT);

        set(0, id);
        set(1, isVip);
        set(2, number);
        set(3, cinemaHallId);
    }
}
